<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>xyz.ottr.lutra</groupId>
        <version>0.6.21-SNAPSHOT</version>
        <artifactId>lutra</artifactId>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>lutra-wottr</artifactId>
    <packaging>jar</packaging>

    <name>${project.groupId}:${project.artifactId}</name>
    <description>
        This Lutra submodule implements readers and writers for the wOTTR serialisation format (https://spec.ottr.xyz/wOTTR/0.4/). 
        wOTTR is a syntax for writing templates and instances in RDF intended for publishing templates and instances on the 
        web or for storage in a triplestore. 
        
        Lutra is the reference implementation of the OTTR framework. For more information about OTTR, see http://ottr.xyz.
    </description>

    <properties>
        <wottr.version>0.4.5</wottr.version>
        <url.wottrspec>https://spec.ottr.xyz/wOTTR/${wottr.version}/</url.wottrspec>
        <!--url.wottrspec>https://dev.spec.ottr.xyz/wOTTR/</url.wottrspec-->
        <local.wottrspec>${project.basedir}/src/test/resources/spec/</local.wottrspec>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>lutra-core</artifactId>
            <!-- for transitive dependencies see module POM -->
        </dependency>

        <!-- Needed for RDFDataMgr, RDF I/O -->
        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-arq</artifactId>
            <!-- transitive dependencies:
                - jena-core (commons-cli, jena-iri, jena-base (commons-io, commons-lang3, com.github.andrewoma.dexx.collection, jena-shaded-guava, commons-compress, commons-codec, commons-csv, slf4j-api) )
                - commons-lang3
                - jsonld-java (commons-io, jcl-over-slf4j)
                - jackson-core
                - jackson-databind (jackson-core, jackson-annotations)
                - gson
                - protobuf-java
                - jakarta.json
                - jcl-over-slf4j (slf4j-api)
                - titanium-json-ld
                - httpclient-cache (httpclient (httpcore))
                - httpclient (httpcore)
                - libthrift (javax.annotation-api, slf4j-api, httpclient (httpcore))
            -->
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>download-vocabulary</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>${url.wottrspec}core-vocabulary.owl.ttl</url>
                            <outputDirectory>${local.wottrspec}</outputDirectory>
                            <overwrite>true</overwrite>
                            <skipCache>false</skipCache>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-grammar</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>${url.wottrspec}core-grammar.shacl.ttl</url>
                            <outputDirectory>${local.wottrspec}</outputDirectory>
                            <overwrite>true</overwrite>
                            <skipCache>false</skipCache>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-examples</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>${url.wottrspec}examples.zip</url>
                            <outputDirectory>${local.wottrspec}</outputDirectory>
                            <overwrite>true</overwrite>
                            <skipCache>false</skipCache>
                            <unpack>true</unpack>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-tests</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>${url.wottrspec}tests.zip</url>
                            <outputDirectory>${local.wottrspec}</outputDirectory>
                            <overwrite>true</overwrite>
                            <skipCache>false</skipCache>
                            <unpack>true</unpack>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>{$local.wottrspec}/tests/correct</directory>
                            <includes>
                                <include>**/*.ttl</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>{$local.wottrspec}/tests/incorrect</directory>
                            <includes>
                                <include>**/*.ttl</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>plantuml-generator-maven-plugin</artifactId>
                <groupId>de.elnarion.maven</groupId>
                <executions>
                    <execution>
                        <id>lutra.wottr</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-test-sources</phase>
                        <configuration>
                            <outputFilename>wottr_all.puml</outputFilename>
                            <hideFields>true</hideFields>
                            <hideMethods>true</hideMethods>
                            <scanPackages>
                                <scanPackage>
                                    xyz.ottr.lutra.wottr
                                </scanPackage>
                            </scanPackages>
                        </configuration>
                    </execution>
                    <execution>
                        <id>lutra.wottr.parser</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-test-sources</phase>
                        <configuration>
                            <outputFilename>wottr-parser.puml</outputFilename>
                            <hideFields>true</hideFields>
                            <hideMethods>true</hideMethods>
                            <scanPackages>
                                <scanPackage>
                                    xyz.ottr.lutra.wottr.parser
                                </scanPackage>
                            </scanPackages>
                        </configuration>
                    </execution>
                    <execution>
                        <id>lutra.wottr.writer</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-test-sources</phase>
                        <configuration>
                            <outputFilename>wottr-writer.puml</outputFilename>
                            <hideFields>true</hideFields>
                            <hideMethods>true</hideMethods>
                            <scanPackages>
                                <scanPackage>
                                    xyz.ottr.lutra.wottr.writer
                                </scanPackage>
                            </scanPackages>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
