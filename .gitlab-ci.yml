image: maven:3.8.1-jdk-11-openj9

stages:
  - build
  - test
  - release
  - deploy

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .m2/repository/

build:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS compile
  artifacts:
    name: "Maven target from $CI_JOB_NAME of $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    when: always
    expire_in: 1 week
    paths:
      - ./*
      
test:
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS verify
  artifacts:
    name: "Maven target from $CI_JOB_NAME of $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    paths:
      - ./**/target/

## This job keeps the main artifacts from the build and publishes them to ottr.xyz.
release:
  stage: release
  script:
    - cp lutra-cli/target/lutra.jar lutra.jar
    - cp lutra-restapi/target/lutra.war lutra.war
    - apt-get update -qq && apt-get install -y -qq sshpass
    - sshpass -V
    - export SSHPASS=$FTP_PASS
    - echo ${CI_COMMIT_REF_NAME}
    - cp lutra.jar lutra-$CI_COMMIT_REF_NAME.jar
    - sshpass -e scp -o stricthostkeychecking=no lutra-$CI_COMMIT_REF_NAME.jar $FTP_HOST:/www.ottr.xyz/downloads/lutra/
  only:
    - develop
    - master
    - tags
  artifacts:
    expire_in: 2 mos 2 week
    paths:
      - lutra.jar
      - lutra.war

## This job creates a release in GitLab.
register_release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG                 # Run this job when a tag is created
  script:
    - echo "running release_job"
  release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: '$CI_COMMIT_TAG'
    description: 'Release of Lutra $CI_COMMIT_TAG.'
    assets:
      links:
        - name: 'Lutra executable JAR file'
          url: 'https://www.ottr.xyz/downloads/lutra/lutra-$CI_COMMIT_TAG.jar'

deploy-docker-image:
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd lutra-restapi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${CI_COMMIT_REF_NAME}" .
    - docker push "$CI_REGISTRY_IMAGE${CI_COMMIT_REF_NAME}"
  only:
    - master

include:
  - template: Code-Quality.gitlab-ci.yml
    rules:
      - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master"
  - template: Security/License-Scanning.gitlab-ci.yml
    rules:
      - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master"
  - template: Security/Secret-Detection.gitlab-ci.yml
    rules:
      - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master"
  - template: Security/SAST.gitlab-ci.yml
    
spotbugs-sast:
  dependencies:
    - build
  rules:
      - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master"
  variables:
    MAVEN_REPO_PATH: $CI_PROJECT_DIR/.m2/repository
    COMPILE: "false"
  artifacts:
    reports:
      sast: gl-sast-report.json
      